@page "/postdetail/{id}"
<PageTitle>@result.Title</PageTitle>



<MudCard Elevation="0" Class="ma-5 pa-2">
    <MudText Typo="Typo.body2">@($"Bài viết")</MudText>
    @if (_isLoadingAll)
    {
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="m-3" />
    }
    else
    {
        <div class="d-flex align-center justify-center">
            <div class="me-auto">
                <MudText Typo="@(result.Title.Length > 25 ? Typo.h6 : Typo.h4)" Style="overflow: hidden;text-overflow: ellipsis;">
                    <span style="font-weight:500;">@result!.Title</span>
                </MudText>
                <MudText Typo="Typo.body2">Tác giả: <span style="font-weight: 500">@result.CreatedName</span></MudText>
            </div>
            <div>
                <div class="d-flex align-center justify-end">
                    <MudText Typo="Typo.subtitle1">Tag:</MudText>
                    @if (lstTags.Count == 0)
                    {
                        <MudText Typo="Typo.subtitle1" Class="ml-2">Không có</MudText>
                    }
                    else
                    {
                        @foreach (var tag in lstTags)
                        {
                            <MudChip Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary">@tag.Name</MudChip>
                        }
                    }
                </div>
                <MudText Typo="Typo.caption">@result.CreatedTime.ToString("hh:mm tt dd/MM/yyyy")</MudText>
            </div>
        </div>

        <MudDivider Class="my-2"></MudDivider>

        <MudPaper Class="pa-4" Elevation="0">
            <MudText>@result.Content</MudText>
        </MudPaper>

        <MudDivider></MudDivider>
        <div class="d-flex align-center pt-2">
            <MudIcon Icon="@Icons.Material.Filled.Share" Size="Size.Small"></MudIcon>
            <MudText Typo="Typo.h6" Class="ms-1">Bài viết tham khảo</MudText>
        </div>
        

        <MudNavMenu Dense="true" Margin="Margin.None">
            @if (lstSuggestPost.Count > 0)
            {
                <div class="my-3 mx-1">
                    @foreach (var item in lstSuggestPost)
                    {
                        <MudNavLink OnClick="@(async() => await OnClick(item.Id.ToString()))" Class="my-1" Style="border-left: 2px solid black"><MudText>@item.Title</MudText></MudNavLink>
                    }
                </div>
            }
        </MudNavMenu>
    }
</MudCard>
        

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty; 
    [Inject]
    public IClientPostService ClientPostService { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    PostDetailDTO result = new();
    PaginationResponse<TagBaseDTO> tagsResult { get; set; } = new();
    List<TagBaseDTO> lstTags { get; set; } = new();
    ClientPostGetTagsByPostIdWithPaginationRequest request = new();
    PostBaseDTO parentPost = new();
    PaginationResponse<PostBaseDTO> childPosts = new();
    List<PostBaseDTO> lstChildPosts = new();
    ClientPostGetChildWithPaginationRequest requestChild = new();
    private List<PostBaseDTO> lstSuggestPost = new();

    private bool _isLoadingAll = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData().ContinueWith((re) =>
        {
            _isLoadingAll = false;
        });
    }
    private async Task LoadData()
    {
        request.Id = Id;
        requestChild.Id = Id;
        result = await ClientPostService.GetPostDetailById(Id);
        tagsResult = await ClientPostService.GetTagsByPostId(request);
        lstTags = tagsResult.Data.ToList();
        parentPost = await ClientPostService.GetParentPostById(Id);
        if (parentPost != null && parentPost.Id != Guid.Empty)
        {
            lstSuggestPost.Add(parentPost);
        }
        childPosts = await ClientPostService.GetChildByPostId(requestChild);
        lstChildPosts = childPosts.Data.ToList();
        if (childPosts != null)
        {
            lstSuggestPost.AddRange(childPosts.Data.ToList());
        }
    }
    private async Task OnClick(string id)
    {
        if(Id != id)
        {
            NavigationManager.NavigateTo($"/postdetail/{id}");
            Id = id;
            lstSuggestPost.Clear();
            await LoadData();
            StateHasChanged();
        }

    }
}
