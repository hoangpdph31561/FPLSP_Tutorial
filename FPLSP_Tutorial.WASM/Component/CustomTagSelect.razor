@using FPLSP_Tutorial.WASM.Data.DataTransferObjects.Tag;

<style>
    .mud-dialog-title {
        padding: 0 !important;
    }
</style>

<MudDialog Style="width: 50vw;">
    <DialogContent>
        <MudText Typo="Typo.h5" Style="font-weight: 500;" Class="my-2">Chọn Tag</MudText>
        <div>
            <MudTextField Variant="Variant.Outlined" T="string" @bind-Value="SearchString" Label="Tìm kiếm" DebounceInterval="200" OnDebounceIntervalElapsed="@(async () => await OnSearchFunc())" Immediate></MudTextField>

            <div class="mt-2">
                @foreach (var i in _lstTagDisPlay.Where(c => ListTag.Any(d => d.Id == c.Id) == false))
                {
                    // Truyền pthc thêm Tag khỏi List<Tag> vào trong OnClose
                    <MudChip Color="Color.Primary" Variant="Variant.Outlined" CloseIcon="@Icons.Material.Filled.AddCircle" OnClose="@(() => { if(!ListTag.Any(c => c.Id == i.Id)) {ListTag.Add(i); }})">@i.Name</MudChip>
                }
            </div>


            <MudText Typo="Typo.caption">Đã chọn:</MudText>
            <MudDivider></MudDivider>
            <div style="overflow: auto; width: 100%;" class="py-2">
                @foreach (var i in _toggleAllTags ? ListTag : ListTag.Take(_maxChipDisplay))
                {
                    // Truyền pthc xóa Tag khỏi List<Tag> vào trong OnClose
                    <MudChip Color="Color.Primary" Variant="Variant.Outlined" OnClose="@(() => { ListTag.Remove(i); })">@i.Name</MudChip>
                }
                @if (_toggleAllTags)
                {
                    <MudChip Color="Color.Default" Variant="Variant.Outlined" OnClick="@(() => _toggleAllTags = false)" Style="font-weight: 500">@("<")</MudChip>
                }
                else
                {
                    if (ListTag.Count() > _maxChipDisplay)
                    {
                        <MudChip Color="Color.Default" Variant="Variant.Outlined" OnClick="@(() => _toggleAllTags = true)">@("+" + (ListTag.Count() - _maxChipDisplay))</MudChip>
                    }
                }
            </div>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" OnClick="DeleteServer">Lưu</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<TagDTO> ListTag { get; set; } = new();
    [Parameter]
    public List<TagDTO> ListTagFromDB { get; set; } = new();
    private string SearchString = "";
    private List<TagDTO> _lstTagDisPlay = new();
    private bool _toggleAllTags = false;
    private int _maxChipDisplay = 5;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    protected override async Task OnInitializedAsync()
    {
        _lstTagDisPlay = ListTagFromDB.Take(10).ToList();
    }

    private void DeleteServer()
    {
        MudDialog.Close(DialogResult.Ok(ListTag));
    }

    private async Task OnSearchFunc()
    {
        if(string.IsNullOrWhiteSpace(SearchString))
        {
            _lstTagDisPlay = ListTagFromDB.Take(10).ToList();
        }
        else
        {
            _lstTagDisPlay = ListTagFromDB.Where(x => x.Name.Contains(SearchString)).ToList();
        }
    }
    
}