@using FPLSP_Tutorial.WASM.Data.DataTransferObjects.Tag
@inject IDialogService DialogService

<div Class="d-flex align-center py-2">
    <MudText>Nhãn: </MudText>
    <div style="overflow: auto;">
        @foreach (var i in ToggleAllTags ? ListTag : ListTag.Take(MaxChipDisplay))
        {
            // Truyền pthc xóa Tag khỏi List<Tag> vào trong OnClose
            <MudChip Color="Color.Primary" Variant="Variant.Outlined" OnClose="@(() => { ListTag.Remove(i); })">@i.Name</MudChip>
        }
        @if (ToggleAllTags && ListTagFromDB.Count() > MaxChipDisplay)
        {
            <MudChip Color="Color.Default" Variant="Variant.Outlined" OnClick="@(() => ToggleAllTags = false)" Style="font-weight: 500">@("<")</MudChip>
        }
        else
        {
            if (ListTag.Count() > MaxChipDisplay)
            {
                <MudChip Color="Color.Default" Variant="Variant.Outlined" OnClick="@(() => ToggleAllTags = true)">@("+" + (ListTag.Count() - MaxChipDisplay))</MudChip>
            }
        }
    </div>

    <MudChip Color="Color.Primary" Icon="@Icons.Material.Filled.AddCircle" OnClick="@(async () => { await OnTagSelectionToggle(); })">Thêm</MudChip>
</div>

@code {

    [Parameter]
    public bool ToggleAllTags { get; set; }

    [Parameter]
    public int MaxChipDisplay { get; set; } = 10;

    [Parameter]
    public List<TagDTO> ListTag { get; set; } = new();

    [Parameter]
    public List<TagDTO> ListTagFromDB { get; set; } = new();

    private async Task OnTagSelectionToggle()
    {
        List<TagDTO> lstBeforeChange = new();
        foreach (var i in ListTag) lstBeforeChange.Add(i);

        var parameters = new DialogParameters();

        parameters.Add(nameof(CustomTagSelect.ListTag), ListTag);
        parameters.Add(nameof(CustomTagSelect.ListTagFromDB), ListTagFromDB);


        var dialog = DialogService.Show<CustomTagSelect>("Add Tags", parameters);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            ListTag = (List<TagDTO>)result.Data;
        }
        else
        {
            ListTag = lstBeforeChange;
        }
    }

}