@using FPLSP_Tutorial.WASM.Data.DTO.Major.Request;
@using FPLSP_Tutorial.WASM.Enums;
@using FPLSP_Tutorial.WASM.Service.Interfaces;


<MudDialog>
    <DialogContent> 
        <MudTextField @bind-Value="majorCreate.Name" Label="Tên chuyên ngành"></MudTextField>
        <MudTextField @bind-Value="majorCreate.Code" Label="Mã chuyên ngành"></MudTextField>
        <MudSelect @bind-Value="selectedStatus" Label="Trạng thái" AnchorOrigin="Origin.BottomCenter">
            <MudSelectItem TValue="EntityStatus" Value="EntityStatus.Active">Hoạt động</MudSelectItem>
            <MudSelectItem TValue="EntityStatus" Value="EntityStatus.InActive">Không hoạt động</MudSelectItem>
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Error" @onclick="OnClickCancel">Hủy</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Info" @onclick="Reset">Làm mới</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Success" @onclick="CreateNewMajor">Lưu</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [Parameter]
    public EventCallback OnCloseAdd { get; set; }
    [Inject]
    public IMajorRepository MajorRepository { get; set; }
    [Inject]
    public IDialogService DialogService { get; set; }
    [Inject]
    public ISnackbar Snackbar { get; set; }
    private MajorCreateRequest majorCreate = new MajorCreateRequest();

    private EntityStatus selectedStatus = EntityStatus.Active;

    private async Task OnClickCancel()
    {
        await OnCloseAdd.InvokeAsync();
    }

    private async Task CreateNewMajor()
    {
        var confirm = await DialogService.ShowMessageBox(
            "Thông báo",
            "Xác nhận thêm chuyên ngành?",
            "Xác nhận",
            cancelText: "Hủy"
        );
        if (confirm == true)
        {
            majorCreate.Status = selectedStatus;

            var result = await MajorRepository.AddMajorAsync(majorCreate);
            if (result == true)
            {
                await OnClickCancel();
                Snackbar.Add("Thêm thành công", Severity.Success);
            }
            else
            {
                Snackbar.Add("Thêm thất bại", Severity.Error);
            }
            await Reset();
        }
    }

    private async Task Reset()
    {
        majorCreate = new MajorCreateRequest();
        selectedStatus = EntityStatus.Active;
    }
}