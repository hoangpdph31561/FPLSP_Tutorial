@page "/recreation/post-create"
@using FPLSP_Tutorial.WASM.Data.DataTransferObjects.Post.Request;

@layout ManagementLayout

@inject IPostRepo _repoPost;
@inject ISnackbar _mudSnackbar;
@inject NavigationManager _nav;

<div class="pa-2">
    <MudBreadcrumbs 
        Items="@(new List<BreadcrumbItem>() {
                        new BreadcrumbItem("Trang chủ", href: "/recreation/post/client"),
                        new BreadcrumbItem("Danh sách", href: "/recreation/post-manager"),
                        new BreadcrumbItem("Tạo bài viết", href: null, disabled: true)
    })"></MudBreadcrumbs>

    <MudPaper Class="mt-3 mx-3 pa-4" Elevation="2">
        <div class="row mt-3">
            <div class="col-6"><MudTextField @bind-Value="@_postCreateR.Title" Label="Tiêu đề" Variant="Variant.Outlined"></MudTextField></div>
            <div class="col-6">
                <MudSelect @bind-Value="@_postCreateR.PostType" Label="Loại bài viết" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Hệ thống")">Hệ thống</MudSelectItem>
                    <MudSelectItem Value="@("Chuyên ngành")">Chuyên ngành</MudSelectItem>
                </MudSelect>
            </div>
        </div>

        <MudText Typo="Typo.h6" Class="pt-3">Nội dung</MudText>
        
        <RichTextEditor @ref="@_rteRef" Get="@((string val) => { _postCreateR.Content =  val; })" />

        <div class="row">
            <div class="col d-flex justify-content-end">
                <MudChip OnClick="@(() => _nav.NavigateTo("/recreation/post-manager" + ((idPost == null) ? "" : "?idPost=" + idPost)))" Color="Color.Error" Icon="@Icons.Material.Filled.ExitToApp">Hủy</MudChip>
                <MudChip OnClick="@(async () => { await OnSaveAsync(); })" Color="Color.Primary" Icon="@Icons.Material.Filled.Save">Lưu</MudChip>
            </div>
        </div>
    </MudPaper>
</div>
@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? idPost { get; set; }

    RichTextEditor _rteRef = new();

    private PostCreateRequest _postCreateR = new();

    private async Task OnSaveAsync()
    {
        await _rteRef.GetRTEValue();

        if(idPost != null) _postCreateR.PostId = Guid.Parse(idPost);
        var result = await _repoPost.CreatePostAsync(_postCreateR);
        if(result)
        {
            _mudSnackbar.Add("Thêm thành công", Severity.Success);
            _nav.NavigateTo("/recreation/post-manager" + ((idPost == null) ? "" : "?idPost=" + idPost));
        }
        else
        {
            _mudSnackbar.Add("Thêm thất bại", Severity.Error);
        }
    }
}
